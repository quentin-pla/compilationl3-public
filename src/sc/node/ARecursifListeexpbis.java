/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ARecursifListeexpbis extends PListeexpbis
{
    private TVirgule _virgule_;
    private PExp _exp_;
    private PListeexpbis _listeexpbis_;

    public ARecursifListeexpbis()
    {
        // Constructor
    }

    public ARecursifListeexpbis(
        @SuppressWarnings("hiding") TVirgule _virgule_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") PListeexpbis _listeexpbis_)
    {
        // Constructor
        setVirgule(_virgule_);

        setExp(_exp_);

        setListeexpbis(_listeexpbis_);

    }

    @Override
    public Object clone()
    {
        return new ARecursifListeexpbis(
            cloneNode(this._virgule_),
            cloneNode(this._exp_),
            cloneNode(this._listeexpbis_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARecursifListeexpbis(this);
    }

    public TVirgule getVirgule()
    {
        return this._virgule_;
    }

    public void setVirgule(TVirgule node)
    {
        if(this._virgule_ != null)
        {
            this._virgule_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._virgule_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public PListeexpbis getListeexpbis()
    {
        return this._listeexpbis_;
    }

    public void setListeexpbis(PListeexpbis node)
    {
        if(this._listeexpbis_ != null)
        {
            this._listeexpbis_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listeexpbis_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._virgule_)
            + toString(this._exp_)
            + toString(this._listeexpbis_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._virgule_ == child)
        {
            this._virgule_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._listeexpbis_ == child)
        {
            this._listeexpbis_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._virgule_ == oldChild)
        {
            setVirgule((TVirgule) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._listeexpbis_ == oldChild)
        {
            setListeexpbis((PListeexpbis) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
